{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortOrder","setSortOrder","isReverse","setReverse","visibleGoods","goods","preparedGoods","sort","a","b","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","showReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAA0B,MAA5D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAMcS,CAAiBlB,EAAiBG,EAAWE,GAE5Dc,EAAYhB,GAAaE,EAO/B,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYnB,IAAcJ,EAASc,WAEvCU,QAAS,kBAAMnB,EAAaL,EAASc,WAPvC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYnB,IAAcJ,EAASgB,SAEvCQ,QAAS,kBAAMnB,EAAaL,EAASgB,SAPvC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAAS,kBAAMjB,GAAYD,IAP7B,qBAYCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAhDgB,WACxBnB,EAAa,MACbE,GAAW,IA2CL,sBAUJ,6BAEIC,EAAaiB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1875de9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortOrder: SortType | null,\n  isReverse: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortOrder) {\n    preparedGoods.sort((a, b) => {\n      switch (sortOrder) {\n        case SortType.Alphabet:\n          return a.localeCompare(b);\n\n        case SortType.Length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortOrder, setSortOrder] = useState<SortType | null>(null);\n  const [isReverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortOrder, isReverse);\n\n  const showReset = sortOrder || isReverse;\n\n  const setGoodsByDefault = () => {\n    setSortOrder(null);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortOrder !== SortType.Alphabet },\n          )}\n          onClick={() => setSortOrder(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortOrder !== SortType.Length },\n          )}\n          onClick={() => setSortOrder(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => setReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {showReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setGoodsByDefault}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}